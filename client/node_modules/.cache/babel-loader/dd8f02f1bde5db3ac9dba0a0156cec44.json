{"ast":null,"code":"import _asyncToGenerator from \"/Users/alberto/Desktop/Apps/ecommerce1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/alberto/Desktop/Apps/ecommerce1/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/alberto/Desktop/Apps/ecommerce1/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/alberto/Desktop/Apps/ecommerce1/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/alberto/Desktop/Apps/ecommerce1/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nvar _jsxFileName = \"/Users/alberto/Desktop/Apps/ecommerce1/src/pages/shop/shop.component.jsx\";\nimport _regeneratorRuntime from \"/Users/alberto/Desktop/Apps/ecommerce1/node_modules/@babel/runtime/regenerator/index.js\";\nimport React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\nimport _updateCollections from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ShopPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(ShopPage, _React$Component);\n\n  var _super = _createSuper(ShopPage);\n\n  function ShopPage() {\n    var _this;\n\n    _classCallCheck(this, ShopPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.unsubscribeFromSnapshot = null;\n    return _this;\n  }\n\n  _createClass(ShopPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var updateCollections = this.props.updateCollections;\n      var collectionRef = firestore.collection(\"collections\");\n      this.unsubscribeFromSnapshot = collectionRef.onSnapshot( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(snapshot) {\n          var collectionsMap;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n                  updateCollections(collectionsMap);\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var match = this.props.match;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"shop-page\",\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"\".concat(match.path),\n          component: CollectionsOverview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"\".concat(match.path, \"/:collectionId\"),\n          component: CollectionPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return ShopPage;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateCollections: function updateCollections(collectionsMap) {\n      return dispatch(_updateCollections(collectionsMap));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/alberto/Desktop/Apps/ecommerce1/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","Route","CollectionPage","firestore","convertCollectionsSnapshotToMap","connect","updateCollections","WithSpinner","ShopPage","unsubscribeFromSnapshot","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","match","path","Component","mapDispatchToProps","dispatch"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,kBAAP,MAA8B,+BAA9B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;;IAEMC,Q;;;;;;;;;;;;;;;UAEJC,uB,GAA0B,I;;;;;;WAE1B,6BAAoB;AAClB,UAAQH,iBAAR,GAA8B,KAAKI,KAAnC,CAAQJ,iBAAR;AACA,UAAMK,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,WAAKH,uBAAL,GAA+BE,aAAa,CAACE,UAAd;AAAA,4EAC7B,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,kBAAAA,cADR,GACyBX,+BAA+B,CAACU,QAAD,CADxD;AAEER,kBAAAA,iBAAiB,CAACS,cAAD,CAAjB;;AAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAD6B;;AAAA;AAAA;AAAA;AAAA,UAA/B;AAMD;;;WAED,kBAAS;AACP,UAAQC,KAAR,GAAkB,KAAKN,KAAvB,CAAQM,KAAR;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,UAAA,SAAS,EAAEjB;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,KAAK,MADP;AAEE,UAAA,IAAI,YAAKgB,KAAK,CAACC,IAAX,mBAFN;AAGE,UAAA,SAAS,EAAEf;AAHb;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAUD;;;;EA3BoBH,KAAK,CAACmB,S;;AA8B7B,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAe;AACxCd,IAAAA,iBAAiB,EAAE,2BAACS,cAAD;AAAA,aACjBK,QAAQ,CAACd,kBAAiB,CAACS,cAAD,CAAlB,CADS;AAAA;AADqB,GAAf;AAAA,CAA3B;;AAIA,eAAeV,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCX,QAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport CollectionsOverview from \"../../components/collections-overview/collections-overview.component\";\nimport { Route } from \"react-router-dom\";\nimport CollectionPage from \"../collection/collection.component\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\nimport { connect } from \"react-redux\";\nimport updateCollections from \"../../redux/shop/shop.actions\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nclass ShopPage extends React.Component {\n  //Fetch shop data from Firestor\n  unsubscribeFromSnapshot = null;\n\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(\n      async (snapshot) => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        updateCollections(collectionsMap);\n      }\n    );\n  }\n\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route\n          exact\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: (collectionsMap) =>\n    dispatch(updateCollections(collectionsMap)),\n});\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}