{"ast":null,"code":"import _objectSpread from \"/Users/alberto/Desktop/Apps/ecommerce1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport userActionTypes from \"./user.types\";\nvar INITIAL_STATE = {\n  currentUser: null,\n  error: null\n}; //We set an initial state for the reducer since, at first, we need to have an initial state to compare the one passed through the action\n\nvar userReducer = function userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case userActionTypes.SIGN_IN_SUCCESS:\n    case userActionTypes.SIGN_IN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        currentUser: action.payload,\n        error: null\n      });\n\n    case userActionTypes.SIGN_IN_FAILURE:\n    case userActionTypes.SIGN_IN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n}; //The code \"state = INITIAL_STATE\" is a feature of ES6 that, in case of value of state being FALSE, it sets it to the value in INITIAL_STATE\n\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/alberto/Desktop/Apps/ecommerce1/src/redux/user/user.reducer.js"],"names":["userActionTypes","INITIAL_STATE","currentUser","error","userReducer","state","action","type","SIGN_IN_SUCCESS","payload","SIGN_IN_FAILURE"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,IADO;AAEpBC,EAAAA,KAAK,EAAE;AAFa,CAAtB,C,CAGG;;AAEH,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BJ,aAA0B;AAAA,MAAXK,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,eAAe,CAACQ,eAArB;AACA,SAAKR,eAAe,CAACQ,eAArB;AACE,6CACKH,KADL;AAEEH,QAAAA,WAAW,EAAEI,MAAM,CAACG,OAFtB;AAGEN,QAAAA,KAAK,EAAE;AAHT;;AAKF,SAAKH,eAAe,CAACU,eAArB;AACA,SAAKV,eAAe,CAACU,eAArB;AACE,6CACKL,KADL;AAEEF,QAAAA,KAAK,EAAEG,MAAM,CAACG;AAFhB;;AAIF;AACE,aAAOJ,KAAP;AAfJ;AAiBD,CAlBD,C,CAkBG;;;AAEH,eAAeD,WAAf","sourcesContent":["import userActionTypes from \"./user.types\";\n\nconst INITIAL_STATE = {\n  currentUser: null,\n  error: null,\n}; //We set an initial state for the reducer since, at first, we need to have an initial state to compare the one passed through the action\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case userActionTypes.SIGN_IN_SUCCESS:\n    case userActionTypes.SIGN_IN_SUCCESS:\n      return {\n        ...state,\n        currentUser: action.payload,\n        error: null,\n      };\n    case userActionTypes.SIGN_IN_FAILURE:\n    case userActionTypes.SIGN_IN_FAILURE:\n      return {\n        ...state,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n}; //The code \"state = INITIAL_STATE\" is a feature of ES6 that, in case of value of state being FALSE, it sets it to the value in INITIAL_STATE\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}