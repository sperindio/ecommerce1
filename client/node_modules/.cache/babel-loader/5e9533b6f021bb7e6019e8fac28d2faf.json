{"ast":null,"code":"import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../with-spinner/with-spinner.component\";\nimport CollectionsOverview from \"./collections-overview.component\";\nvar mapStateToProps = createStructuredSelector({\n  isLoading: function isLoading(state) {\n    return !selectIsCollectionFetching(state);\n  }\n}); //We will now pass the isLoading selector to the HOC through redux function \"compose\"\n\nvar CollectionsOverviewContainer = compose(connect(mapStateToProps), WithSpinner)(CollectionsOverview);\nexport default CollectionsOverviewContainer;","map":{"version":3,"sources":["/Users/alberto/Desktop/Apps/ecommerce1/src/components/collections-overview/collections-overview.container.jsx"],"names":["connect","compose","createStructuredSelector","selectIsCollectionFetching","WithSpinner","CollectionsOverview","mapStateToProps","isLoading","state","CollectionsOverviewContainer"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AACA,OAAOC,WAAP,MAAwB,wCAAxB;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AAEA,IAAMC,eAAe,GAAGJ,wBAAwB,CAAC;AAC/CK,EAAAA,SAAS,EAAE,mBAACC,KAAD;AAAA,WAAW,CAACL,0BAA0B,CAACK,KAAD,CAAtC;AAAA;AADoC,CAAD,CAAhD,C,CAIA;;AACA,IAAMC,4BAA4B,GAAGR,OAAO,CAC1CD,OAAO,CAACM,eAAD,CADmC,EAE1CF,WAF0C,CAAP,CAGnCC,mBAHmC,CAArC;AAKA,eAAeI,4BAAf","sourcesContent":["import { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport { selectIsCollectionFetching } from \"../../redux/shop/shop.selectors\";\nimport WithSpinner from \"../with-spinner/with-spinner.component\";\nimport CollectionsOverview from \"./collections-overview.component\";\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: (state) => !selectIsCollectionFetching(state),\n});\n\n//We will now pass the isLoading selector to the HOC through redux function \"compose\"\nconst CollectionsOverviewContainer = compose(\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;\n"]},"metadata":{},"sourceType":"module"}