{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root-reducer\";\nvar middlewares = [logger]; //In middlewares, we store the logger array, which intercept the set of actions that are being actionated.\n\nvar store = createStore(rootReducer, applyMiddleware.apply(void 0, middlewares)); //Now, we actually create the store with the root reducer (thus the collection of states) and the logger (actions)\n\nexport default store;","map":{"version":3,"sources":["/Users/alberto/Desktop/Apps/ecommerce1/src/redux/store.js"],"names":["createStore","applyMiddleware","logger","rootReducer","middlewares","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,IAAMC,WAAW,GAAG,CAACF,MAAD,CAApB,C,CAA8B;;AAE9B,IAAMG,KAAK,GAAGL,WAAW,CAACG,WAAD,EAAcF,eAAe,MAAf,SAAmBG,WAAnB,CAAd,CAAzB,C,CAAyE;;AAEzE,eAAeC,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport logger from \"redux-logger\";\nimport rootReducer from \"./root-reducer\";\n\nconst middlewares = [logger]; //In middlewares, we store the logger array, which intercept the set of actions that are being actionated.\n\nconst store = createStore(rootReducer, applyMiddleware(...middlewares)); //Now, we actually create the store with the root reducer (thus the collection of states) and the logger (actions)\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}