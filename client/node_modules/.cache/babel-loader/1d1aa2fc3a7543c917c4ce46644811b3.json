{"ast":null,"code":"import _regeneratorRuntime from \"/Users/alberto/Desktop/Apps/ecommerce1/client/node_modules/@babel/runtime/regenerator/index.js\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart),\n    _marked3 = /*#__PURE__*/_regeneratorRuntime.mark(shopSagas);\n\nimport { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function fetchCollectionsAsync() {\n  var collectionRef, snapshot, collectionsMap;\n  return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          collectionRef = firestore.collection(\"collections\");\n          _context.next = 4;\n          return collectionRef.get();\n\n        case 4:\n          snapshot = _context.sent;\n          _context.next = 7;\n          return call(convertCollectionsSnapshotToMap, snapshot);\n\n        case 7:\n          collectionsMap = _context.sent;\n          _context.next = 10;\n          return put(fetchCollectionsSuccess(collectionsMap));\n\n        case 10:\n          _context.next = 16;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 16;\n          return put(fetchCollectionsFailure(_context.t0.message));\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 12]]);\n}\nexport function fetchCollectionsStart() {\n  return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\nexport function shopSagas() {\n  return _regeneratorRuntime.wrap(function shopSagas$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return all([call(fetchCollectionsStart)]);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/Users/alberto/Desktop/Apps/ecommerce1/client/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","shopSagas","takeLatest","call","put","all","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","collectionRef","collection","get","snapshot","collectionsMap","message","FETCH_COLLECTIONS_START"],"mappings":";;oDAWiBA,qB;qDAeAC,qB;qDAOAC,S;;AAjCjB,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,QAA2C,oBAA3C;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,SAAUX,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEGY,UAAAA,aAFH,GAEmBL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAFnB;AAAA;AAGc,iBAAMD,aAAa,CAACE,GAAd,EAAN;;AAHd;AAGGC,UAAAA,QAHH;AAAA;AAIoB,iBAAMX,IAAI,CAC/BI,+BAD+B,EAE/BO,QAF+B,CAAV;;AAJpB;AAIGC,UAAAA,cAJH;AAAA;AASH,iBAAMX,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;;AATG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAWH,iBAAMX,GAAG,CAACK,uBAAuB,CAAC,YAAMO,OAAP,CAAxB,CAAT;;AAXG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeP,OAAO,SAAUhB,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAME,UAAU,CACdQ,eAAe,CAACO,uBADF,EAEdlB,qBAFc,CAAhB;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOP,OAAO,SAAUE,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMI,GAAG,CAAC,CAACF,IAAI,CAACH,qBAAD,CAAL,CAAD,CAAT;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeLatest, call, put, all } from \"redux-saga/effects\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n    //Sagas use the put() key instead of dispatch()\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}