{"ast":null,"code":"import _objectSpread from \"/Users/alberto/Desktop/Apps/ecommerce1/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/alberto/Desktop/Apps/ecommerce1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"/Users/alberto/Desktop/Apps/ecommerce1/node_modules/@babel/runtime/regenerator/index.js\";\nimport firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/auth\";\nvar config = {\n  apiKey: \"AIzaSyCwy6BG6EUay5pvkNh6_Fg-6Zz2exL5t64\",\n  authDomain: \"crwn-db-4e424.firebaseapp.com\",\n  projectId: \"crwn-db-4e424\",\n  storageBucket: \"crwn-db-4e424.appspot.com\",\n  messagingSenderId: \"197082671715\",\n  appId: \"1:197082671715:web:53a4bf6281c7ee6b44a656\"\n};\nexport var createUserProfileDocument = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth, additionalData) {\n    var userRef, snapShot, displayName, email, createdAt;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (userAuth) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\");\n\n          case 2:\n            //If the user is logged out, just return\n            userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n            _context.next = 5;\n            return userRef.get();\n\n          case 5:\n            snapShot = _context.sent;\n\n            if (snapShot.exists) {\n              _context.next = 17;\n              break;\n            }\n\n            //This if will check if the user exist already. If it DOES NOT exist, it will create one in the DB\n            displayName = userAuth.displayName, email = userAuth.email;\n            createdAt = new Date();\n            _context.prev = 9;\n            _context.next = 12;\n            return userRef.set(_objectSpread({\n              displayName: displayName,\n              email: email,\n              createdAt: createdAt\n            }, additionalData));\n\n          case 12:\n            _context.next = 17;\n            break;\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](9);\n            console.log(\"Error creating user\", _context.t0.message);\n\n          case 17:\n            return _context.abrupt(\"return\", userRef);\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[9, 14]]);\n  }));\n\n  return function createUserProfileDocument(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var addCollectionAndDocuments = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey, objectsToAdd) {\n    var collectionRef, batch;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            collectionRef = firestore.collection(collectionKey);\n            console.log(collectionRef);\n            batch = firestore.batch();\n            objectsToAdd.forEach(function (obj) {\n              var newDocRef = collectionRef.doc();\n              batch.set(newDocRef, obj);\n            });\n            _context2.next = 6;\n            return batch.commit();\n\n          case 6:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function addCollectionAndDocuments(_x3, _x4) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //Function to retrieve shop data from Firestore\n\nexport var convertCollectionsSnapshotToMap = function convertCollectionsSnapshotToMap(collections) {\n  var transformedCollection = collections.docs.map(function (doc) {\n    var _doc$data = doc.data(),\n        title = _doc$data.title,\n        items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title: title,\n      items: items\n    };\n  });\n  return transformedCollection.reduce(function (accumulator, collection) {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nfirebase.initializeApp(config);\nexport var getCurrentUser = function getCurrentUser() {\n  return new Promise(function (resolve, reject) {\n    var unsubscribe = auth.onAuthStateChanged(function (userAuth) {\n      unsubscribe();\n      resolve(user);\n    }, reject);\n  });\n};\nexport var auth = firebase.auth();\nexport var firestore = firebase.firestore();\nexport var googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport var signInWithGoogle = function signInWithGoogle() {\n  return auth.signInWithPopup(googleProvider);\n};\nexport default firebase;","map":{"version":3,"sources":["/Users/alberto/Desktop/Apps/ecommerce1/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","initializeApp","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","user","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/auth\";\n\nconst config = {\n  apiKey: \"AIzaSyCwy6BG6EUay5pvkNh6_Fg-6Zz2exL5t64\",\n  authDomain: \"crwn-db-4e424.firebaseapp.com\",\n  projectId: \"crwn-db-4e424\",\n  storageBucket: \"crwn-db-4e424.appspot.com\",\n  messagingSenderId: \"197082671715\",\n  appId: \"1:197082671715:web:53a4bf6281c7ee6b44a656\",\n};\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return; //If the user is logged out, just return\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    //This if will check if the user exist already. If it DOES NOT exist, it will create one in the DB\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData,\n      });\n    } catch (error) {\n      console.log(\"Error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\n\nexport const addCollectionAndDocuments = async (\n  collectionKey,\n  objectsToAdd\n) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach((obj) => {\n    const newDocRef = collectionRef.doc();\n    batch.set(newDocRef, obj);\n  });\n\n  return await batch.commit();\n};\n\n//Function to retrieve shop data from Firestore\nexport const convertCollectionsSnapshotToMap = (collections) => {\n  const transformedCollection = collections.docs.map((doc) => {\n    const { title, items } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items,\n    };\n  });\n\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\n\nfirebase.initializeApp(config);\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged((userAuth) => {\n      unsubscribe();\n      resolve(user);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: \"select_account\" });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;\n"]},"metadata":{},"sourceType":"module"}