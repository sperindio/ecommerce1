{"ast":null,"code":"var _jsxFileName = \"/Users/alberto/Desktop/Apps/ecommerce1/src/App.js\",\n    _this = this;\n\nimport React, { useEffect } from \"react\"; //React-Router-Dom import\n\nimport { Route, Switch, Redirect } from \"react-router-dom\"; //Components import\n\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInSignUpPage from \"./pages/signin-signup/signin-signup.component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport { checkUserSession as _checkUserSession } from \"./redux/user/user.actions\"; //Selectors\n\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"./redux/user/user.selectors\"; //Style import\n\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar App = function App() {\n  var currentUser = useSelector(selectCurrentUser);\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(_checkUserSession());\n  }, [dispatch]);\n  /*     this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      //auth.onAuthStateChanged is a native method of Firebase auth that lets us listen to changes to the login state\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n         //Below, we'll set the state to the user data we get from DB\n        userRef.onSnapshot((snapShot) => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data(),\n          });\n        });\n      } else {\n        //if the userAuth is false (null or logout), the app will set the state to null\n        setCurrentUser(userAuth);\n      }\n    }); */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: HomePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/shop\",\n        component: ShopPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/checkout\",\n        component: CheckoutPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signin\",\n        render: function render() {\n          return currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 27\n          }, _this) : /*#__PURE__*/_jsxDEV(SignInSignUpPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 49\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, _this);\n};\n\nvar mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    checkUserSession: function checkUserSession() {\n      return dispatch(_checkUserSession());\n    }\n  };\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/alberto/Desktop/Apps/ecommerce1/src/App.js"],"names":["React","useEffect","Route","Switch","Redirect","HomePage","ShopPage","Header","SignInSignUpPage","useSelector","useDispatch","CheckoutPage","checkUserSession","createStructuredSelector","selectCurrentUser","App","currentUser","dispatch","mapStateToProps","mapDispatchToProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,kBAAxC,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,gBAAP,MAA6B,+CAA7B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,SAASC,gBAAgB,IAAhBA,iBAAT,QAAiC,2BAAjC,C,CAEA;;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,iBAAT,QAAkC,6BAAlC,C,CAEA;;AACA,OAAO,WAAP;;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAChB,MAAMC,WAAW,GAAGP,WAAW,CAACK,iBAAD,CAA/B;AACA,MAAMG,QAAQ,GAAGP,WAAW,EAA5B;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,QAAQ,CAACL,iBAAgB,EAAjB,CAAR;AACD,GAFQ,EAEN,CAACK,QAAD,CAFM,CAAT;AAIA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEZ;AAAjC;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAEC;AAA/B;AAAA;AAAA;AAAA;AAAA,eAFF,eAGE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,WAAlB;AAA8B,QAAA,SAAS,EAAEK;AAAzC;AAAA;AAAA;AAAA;AAAA,eAHF,eAIE,QAAC,KAAD;AACE,QAAA,KAAK,MADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,MAAM,EAAE;AAAA,iBACNK,WAAW,gBAAG,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,mBAAH,gBAAyB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,mBAD9B;AAAA;AAHV;AAAA;AAAA;AAAA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAiBD,CA3CD;;AA6CA,IAAME,eAAe,GAAGL,wBAAwB,CAAC;AAC/CG,EAAAA,WAAW,EAAEF;AADkC,CAAD,CAAhD;;AAIA,IAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAACF,QAAD;AAAA,SAAe;AACxCL,IAAAA,gBAAgB,EAAE;AAAA,aAAMK,QAAQ,CAACL,iBAAgB,EAAjB,CAAd;AAAA;AADsB,GAAf;AAAA,CAA3B;;AAIA,eAAeG,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\n\n//React-Router-Dom import\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\n//Components import\nimport HomePage from \"./pages/homepage/homepage.component\";\nimport ShopPage from \"./pages/shop/shop.component\";\nimport Header from \"./components/header/header.component\";\nimport SignInSignUpPage from \"./pages/signin-signup/signin-signup.component\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport CheckoutPage from \"./pages/checkout/checkout.component\";\nimport { checkUserSession } from \"./redux/user/user.actions\";\n\n//Selectors\nimport { createStructuredSelector } from \"reselect\";\nimport { selectCurrentUser } from \"./redux/user/user.selectors\";\n\n//Style import\nimport \"./App.css\";\n\nconst App = () => {\n  const currentUser = useSelector(selectCurrentUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(checkUserSession());\n  }, [dispatch]);\n\n  /*     this.unsubscribeFromAuth = auth.onAuthStateChanged(async (userAuth) => {\n      //auth.onAuthStateChanged is a native method of Firebase auth that lets us listen to changes to the login state\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n\n        //Below, we'll set the state to the user data we get from DB\n        userRef.onSnapshot((snapShot) => {\n          setCurrentUser({\n            id: snapShot.id,\n            ...snapShot.data(),\n          });\n        });\n      } else {\n        //if the userAuth is false (null or logout), the app will set the state to null\n        setCurrentUser(userAuth);\n      }\n    }); */\n\n  return (\n    <div>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\" component={HomePage} />\n        <Route path=\"/shop\" component={ShopPage} />\n        <Route exact path=\"/checkout\" component={CheckoutPage} />\n        <Route\n          exact\n          path=\"/signin\"\n          render={() =>\n            currentUser ? <Redirect to=\"/\" /> : <SignInSignUpPage />\n          }\n        />\n      </Switch>\n    </div>\n  );\n};\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  checkUserSession: () => dispatch(checkUserSession()),\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}