{"ast":null,"code":"import _regeneratorRuntime from \"/Users/alberto/Desktop/Apps/ecommerce1/node_modules/@babel/runtime/regenerator/index.js\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart);\n\nimport { takeEvery } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function fetchCollectionsAsync() {\n  var collectionRef;\n  return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return console.log(\"Asyn Fetch Fired\");\n\n        case 2:\n          collectionRef = firestore.collection(\"collections\");\n          collectionRef.get().then(function (snapshot) {\n            var collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n          }).catch(function (error) {\n            return dispatch(fetchCollectionsFailure(error.message));\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function fetchCollectionsStart() {\n  return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/Users/alberto/Desktop/Apps/ecommerce1/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","catch","error","message","FETCH_COLLECTIONS_START"],"mappings":";;oDAWiBA,qB;qDAaAC,qB;;AAxBjB,SAASC,SAAT,QAA0B,oBAA1B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,SAAUP,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMQ,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAN;;AADK;AAGCC,UAAAA,aAHD,GAGiBP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAHjB;AAILD,UAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAEQ,UAACC,QAAD,EAAc;AAClB,gBAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AACAE,YAAAA,QAAQ,CAACX,uBAAuB,CAACU,cAAD,CAAxB,CAAR;AACD,WALH,EAMGE,KANH,CAMS,UAACC,KAAD;AAAA,mBAAWF,QAAQ,CAACV,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAAnB;AAAA,WANT;;AAJK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaP,OAAO,SAAUlB,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMC,SAAS,CACbK,eAAe,CAACa,uBADH,EAEbpB,qBAFa,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"Asyn Fetch Fired\");\n\n  const collectionRef = firestore.collection(\"collections\");\n  collectionRef\n    .get()\n    .then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    })\n    .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}