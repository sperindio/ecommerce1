{"ast":null,"code":"import _regeneratorRuntime from \"/Users/alberto/Desktop/Apps/ecommerce1/node_modules/@babel/runtime/regenerator/index.js\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart);\n\nimport { takeEvery, call } from \"redux-saga/effects\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\nexport function fetchCollectionsAsync() {\n  var collectionRef, snapshot, collectionsMap;\n  return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return console.log(\"Asyn Fetch Fired\");\n\n        case 2:\n          _context.prev = 2;\n          collectionRef = firestore.collection(\"collections\");\n          _context.next = 6;\n          return collectionRef.get();\n\n        case 6:\n          snapshot = _context.sent;\n          _context.next = 9;\n          return call(convertCollectionsSnapshotToMap, snapshot);\n\n        case 9:\n          collectionsMap = _context.sent;\n          _context.next = 14;\n          break;\n\n        case 12:\n          _context.prev = 12;\n          _context.t0 = _context[\"catch\"](2);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[2, 12]]);\n}\nexport function fetchCollectionsStart() {\n  return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/Users/alberto/Desktop/Apps/ecommerce1/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","takeEvery","call","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","console","log","collectionRef","collection","get","snapshot","collectionsMap","FETCH_COLLECTIONS_START"],"mappings":";;oDAWiBA,qB;qDAqBAC,qB;;AAhCjB,SAASC,SAAT,EAAoBC,IAApB,QAAgC,oBAAhC;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAIA,SACEC,uBADF,EAEEC,uBAFF,QAGO,gBAHP;AAIA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,SAAUR,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMS,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAN;;AADK;AAAA;AAIGC,UAAAA,aAJH,GAImBP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAJnB;AAAA;AAKc,iBAAMD,aAAa,CAACE,GAAd,EAAN;;AALd;AAKGC,UAAAA,QALH;AAAA;AAMoB,iBAAMX,IAAI,CAC/BE,+BAD+B,EAE/BS,QAF+B,CAAV;;AANpB;AAMGC,UAAAA,cANH;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBP,OAAO,SAAUd,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACL,iBAAMC,SAAS,CACbM,eAAe,CAACQ,uBADH,EAEbhB,qBAFa,CAAf;;AADK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, call } from \"redux-saga/effects\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure,\n} from \"./shop.actions\";\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"Asyn Fetch Fired\");\n\n  try {\n    const collectionRef = firestore.collection(\"collections\");\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(\n      convertCollectionsSnapshotToMap,\n      snapshot\n    );\n  } catch (error) {}\n  /*   collectionRef\n    .get()\n    .then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    })\n    .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n */\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}