{"ast":null,"code":"var _this = this;\n\nimport ShopActionTypes from \"./shop.types\";\nexport var fetchCollectionsStart = function fetchCollectionsStart() {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n  };\n};\nexport var fetchCollectionsStartAsync = function fetchCollectionsStartAsync() {\n  return function (dispatch) {\n    var collectionRef = firestore.collection(\"collections\"); //This way is a one-time fetch method, quite common and doesn't require a listener component\n\n    collectionRef.get().then(function (snapshot) {\n      var collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n\n      _this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/alberto/Desktop/Apps/ecommerce1/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsStartAsync","dispatch","collectionRef","firestore","collection","get","then","snapshot","collectionsMap","convertCollectionsSnapshotToMap","updateCollections","setState","loading"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,SAAO;AAC1CC,IAAAA,IAAI,EAAEF,eAAe,CAACG;AADoB,GAAP;AAAA,CAA9B;AAIP,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AAC9C,SAAO,UAACC,QAAD,EAAc;AACnB,QAAMC,aAAa,GAAGC,SAAS,CAACC,UAAV,CAAqB,aAArB,CAAtB,CADmB,CAGnB;;AACAF,IAAAA,aAAa,CAACG,GAAd,GAAoBC,IAApB,CAAyB,UAACC,QAAD,EAAc;AACrC,UAAMC,cAAc,GAAGC,+BAA+B,CAACF,QAAD,CAAtD;AACAG,MAAAA,iBAAiB,CAACF,cAAD,CAAjB;;AACA,MAAA,KAAI,CAACG,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD;AAKD,GATD;AAUD,CAXM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collections\");\n\n    //This way is a one-time fetch method, quite common and doesn't require a listener component\n    collectionRef.get().then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n      this.setState({ loading: false });\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}