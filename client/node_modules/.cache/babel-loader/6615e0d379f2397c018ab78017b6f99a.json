{"ast":null,"code":"var _this = this;\n\nimport ShopActionTypes from \"./shop.types\";\nimport { firestore, converconvertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport var fetchCollectionsStart = function fetchCollectionsStart() {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n  };\n};\nexport var fetchCollectionsSuccess = function fetchCollectionsSuccess(collectionsMap) {};\nexport var fetchCollectionsStartAsync = function fetchCollectionsStartAsync() {\n  return function (dispatch) {\n    var collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart()); //This way is a one-time fetch method, quite common and doesn't require a listener component\n\n    collectionRef.get().then(function (snapshot) {\n      var collectionsMap = convertCollectionsSnapshotToMap(snapshot); //updateCollections(collectionsMap);\n\n      _this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/alberto/Desktop/Apps/ecommerce1/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","converconvertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","convertCollectionsSnapshotToMap","setState","loading"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,qCAFF,QAGO,+BAHP;AAKA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,SAAO;AAC1CC,IAAAA,IAAI,EAAEJ,eAAe,CAACK;AADoB,GAAP;AAAA,CAA9B;AAIP,OAAO,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,cAAD,EAAoB,CAAE,CAAtD;AAEP,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,GAAM;AAC9C,SAAO,UAACC,QAAD,EAAc;AACnB,QAAMC,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACN,qBAAqB,EAAtB,CAAR,CAFmB,CAGnB;;AACAO,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,UAACC,QAAD,EAAc;AACrC,UAAMP,cAAc,GAAGQ,+BAA+B,CAACD,QAAD,CAAtD,CADqC,CAErC;;AACA,MAAA,KAAI,CAACE,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD;AAKD,GATD;AAUD,CAXM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport {\n  firestore,\n  converconvertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = (collectionsMap) => {};\n\nexport const fetchCollectionsStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    //This way is a one-time fetch method, quite common and doesn't require a listener component\n    collectionRef.get().then((snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      //updateCollections(collectionsMap);\n      this.setState({ loading: false });\n    });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}